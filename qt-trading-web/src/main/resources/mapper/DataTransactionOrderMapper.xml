<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qtdbp.trading.mapper.DataTransactionOrderMapper">

    <!-- 最新5条数据订单 -->
    <select id="findNewOrdersByUserId" resultMap="OrderResultMap">
        SELECT
            o.product_type,
            o.product_id,
            o.user_id,
            o.order_no,
            o.amount,
            o.order_state,
            o.addtime,
            o.editor_time,
            o.order_subject,
            o.download_code,
            o.download_url
        FROM
            data_transaction_order AS o
        WHERE
            user_id = #{uid}
        ORDER BY
            addtime DESC
        Limit #{page}
    </select>

    <!-- 分页查询订单 -->
    <select id="findOrdersByCondtion" resultMap="OrderResultMap">
        SELECT
        o.product_type,
        o.product_id,
        o.user_id,
        o.order_no,
        o.amount,
        o.order_state,
        o.addtime,
        o.editor_time,
        o.order_subject,
        o.download_code,
        o.download_url
        FROM
        data_transaction_order AS o
        WHERE
        user_id = #{userId}
        <if test="orderState != null and orderState != 0">
            AND o.order_state = #{orderState}
        </if>
        ORDER BY
          addtime DESC
    </select>

    <resultMap id="OrderResultMap" type="com.qtdbp.trading.model.DataTransactionOrderModel" >
        <id column="id" property="id" />
        <result column="product_type" property="productType" />
        <result column="product_id" property="productId" />
        <result column="user_id" property="userId" />
        <result column="order_no" property="orderNo" />
        <result column="amount" property="amount" />
        <result column="order_state" property="orderState" />
        <result column="addtime" property="addtime" />
        <result column="editor_time" property="editorTime" />
        <result column="order_subject" property="orderSubject" />
        <result column="download_code" property="downloadCode" />
        <result column="download_url" property="downloadUrl" />
    </resultMap>

    <!-- 添加订单 -->
    <insert id="insertOrder" parameterType="com.qtdbp.trading.model.DataTransactionOrderModel" useGeneratedKeys="true" keyProperty="id">
        <!-- mysql插入数据后，获取id -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>

        INSERT INTO data_transaction_order (
            product_type,
            product_id,
            user_id,
            sell_user_id,
            order_no,
            order_subject,
            order_content,
            amount,
            receive_way,
            receive_email,
            order_state,
            addtime,
            download_url,
            download_code,
            receive_name,
            contact_phone,
            trade_no
        )
        VALUES (
            #{productType},
            #{productId},
            #{userId},
            #{sellerUserId},
            #{orderNo},
            #{orderSubject},
            #{orderContent},
            #{amount},
            #{receiveWay},
            #{receiveEmail},
            #{orderState},
            now(),
            #{downloadUrl},
            #{downloadCode},
            #{receiveName},
            #{contactPhone},
            #{tradeNo}
        )
    </insert>

    <!--根据用户名和产品id和产品类型查询是否有该条记录-->
    <select id="findOrderByUserIdAndProductIdAndType" resultMap="OrderResultMap">
        select o.id,
        o.product_type,
        o.product_id,
        o.user_id,
        o.order_no,
        o.amount,
        o.order_state,
        o.addtime,
        o.editor_time,
        o.order_subject,
        o.download_code,
        o.download_url from data_transaction_order as o
        where o.user_id=${userId}
        and o.product_id=${productId}
        and o.product_type=${productType}
    </select>

    <update id="updateOrder" parameterType="com.qtdbp.trading.model.DataTransactionOrderModel">
           UPDATE data_transaction_order SET order_state = #{orderState} ,pay_time= #{payTime} ,
           finish_time = #{finishTime},trade_no=#{tradeNo} WHERE order_no = #{orderNo}
    </update>

    <!-- 查询订单信息 -->
    <select id="findOrderByNo" resultMap="OrderResultMap">
        SELECT
            o.product_type,
            o.product_id,
            o.user_id,
            o.order_no,
            o.amount,
            o.order_state,
            o.addtime,
            o.editor_time,
            o.order_subject,
            o.download_code,
            o.download_url
        FROM
            data_transaction_order AS o
        WHERE
            order_no = #{orderNo}
    </select>
</mapper>