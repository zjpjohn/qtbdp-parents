<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qtdbp.tradingadmin.mapper.DataProductMapper">

    <!-- 分页查询数据包产品 -->
    <select id="findProductsByCondtion" resultMap="ProductResultMap">
        SELECT
        p.id,
        p.designation,
        p.pic,
        p.introduce,
        p.price,
        p.data_type_props,
        p.addtime,
        p.data_type,
        p.user_id,
        p.is_used,
        s.name
        FROM
        data_product as p left join sys_users s on p.user_id = s.user_id
        <where>
            <if test="dataType != null and dataType != 0">
                p.data_type = #{dataType}
            </if>
            <if test="dataType != null and designation != null">
                and
            </if>
            <if test="designation != null">
                p.designation like '%${designation}%'
            </if>
        </where>
        ORDER BY
        addtime desc
    </select>

    <resultMap id="ProductResultMap" type="com.qtdbp.trading.model.DataProductModel" >
        <id column="Id" property="id" />
        <result column="designation" property="designation" />
        <result column="pic" property="pic" />
        <result column="introduce" property="introduce" />
        <result column="data_type_props" property="dataTypeProps"/>
        <result column="attr_name" property="attrName" />
        <result column="val_name" property="valName" />
        <result column="price" property="price"/>
        <result column="addtime" property="addTime" />
        <result column="data_type" property="dataType" />
        <result column="user_id" property="userId" />
        <result column="is_used" property="isUsed" />
        <result column="name" property="username" />
    </resultMap>

    <!-- 单表查询产品 -->
    <select id="findProductsById" resultMap="ProductDetailResultMap">
        SELECT
        p.id,
        p.designation,
        p.pic,
        p.data_type,
        p.introduce,
        p.addtime,
        p.editor_time,
        p.price,
        p.data_type_props,
        p.item_price,
        p.file_url,
        user_id
        FROM
        data_product as p
        WHERE
          p.id = #{id}
        ORDER BY
        p.addtime DESC
    </select>

    <resultMap id="ProductDetailResultMap" type="com.qtdbp.trading.model.DataProductModel" >
        <id column="Id" property="id" />
        <result column="designation" property="designation" />
        <result column="pic" property="pic" />
        <result column="introduce" property="introduce" />
        <result column="addtime" property="addTime" />
        <result column="editor_time" property="editorTime" />
        <result column="data_type_props" property="dataTypeProps" />
        <result column="file_url" property="fileUrl"/>
        <result column="is_used" property="isUsed"/>
        <result column="data_type" property="dataType"  />
        <result column="user_id" property="userId" />
        <result column="price" property="price" />
        <result column="item_price" property="itemPrice" />
        
        <association property="dataTypeModel" column="data_type" select="findDataTypeById"></association>

        <association property="attrRelationModels" column="id" select="findProductAttrRelation"></association>

        <association property="buyCount" column="id" select="findOrdersCountByProductId"></association>
    </resultMap>

    <!-- 通过产品ID计算订单购买数，其中product_type=1表示数据包产品,order_state = 3表示已完成交易 -->
    <select id="findOrdersCountByProductId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
      SELECT COUNT(*) FROM data_transaction_order  WHERE product_id = #{id} AND product_type = 1 AND order_state = 3
    </select>

    <!--根据id查询单条数据类型-->
    <select id="findDataTypeById" parameterType="java.lang.Integer" resultMap="dataTypeModel">
        select * from data_type where id = #{id}
    </select>

    <!--数据类型表实体类映射-->
    <resultMap id="dataTypeModel" type="com.qtdbp.trading.model.DataTypeModel">
        <id column="id" property="id" />
        <result column="pid" property="pid" />
        <result column="name" property="name" />
        <result column="is_used" property="isUsed" />
        <result column="sort" property="sort" />
        <result column="remark" property="remark" />
        <result column="is_parent" property="isParent" />
    </resultMap>

    <!-- 更新产品信息 -->
    <update id="updateProduct" parameterType="com.qtdbp.trading.model.DataProductModel">
        UPDATE data_product
        <trim prefix="set" suffixOverrides=",">
            <if test="editorId != null">editor_id = #{editorId},</if>
            editor_time = now(),
            <if test="downloadCount != null and downloadCount != 0">download_count = IFNULL(download_count,0)+1,</if>
            <if test="buyCount != null and buyCount != 0">buy_count = IFNULL(buy_count,0)+1,</if>
            <if test="designation != null"> designation = #{designation} ,</if>
            <if test="introduce != null">introduce = #{introduce} ,</if>
            <if test="pic != null">pic = #{pic} ,</if>
            <if test="dataType != null and dataType != 0">data_type = #{dataType} ,</if>
            <if test="price != null and price != 0">price = #{price} ,</if>
            <if test="itemPrice != null and itemPrice != 0">item_price = #{itemPrice} ,</if>
            <if test="fileUrl != null">file_url = #{fileUrl} ,</if>
            <if test="dataTypeProps != null">data_type_props = #{dataTypeProps} ,</if>
            <if test="dataSize != null">data_size = #{dataSize},</if>
        </trim>
        WHERE
        id = #{id}
    </update>

    <insert id="insertProduct" parameterType="com.qtdbp.trading.model.DataProductModel" useGeneratedKeys="true" keyProperty="id">
        <!-- mysql插入数据后，获取id -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into data_product (
            designation,
            introduce,
            pic,
            data_scale,
            data_type,
            data_type_sub,
            price,
            item_price,
            file_url,
            province_id,
            is_huadong,
            user_id,
            addtime,
            editor_id,
            editor_time,
            sort,
            rec,
            is_used,
            type_chain,
            data_type_props,
            download_count,
            buy_count,
            data_size
        ) VALUES (
            #{designation},
            #{introduce},
            #{pic},
            #{dataScale},
            #{dataType},
            0,
            #{price},
            #{itemPrice},
            #{fileUrl},
            #{provinceId},
            1,
            #{userId},
            now(),
            0,
            null,
            #{sort},
            #{rec},
            #{isUsed},
            NULL ,
            #{dataTypeProps},
            0,
            0,
            #{dataSize}
        )

    </insert>

    <!-- 根据ID查询单条数据包产品 -->
    <select id="findProductByIdIgnoreIsUsed" resultMap="ProductDetailResultMap">
        SELECT
        p.id,
        p.designation,
        p.pic,
        p.introduce,
        p.addtime,
        p.editor_time,
        p.price,
        p.data_type_props,
        p.item_price,
        p.file_url,
        p.is_used
        FROM
        data_product as p
        WHERE
        p.id = #{id}
    </select>

    <!--下架数据包产品-->
    <update id="updateSoldOut" parameterType="java.lang.Integer">
        UPDATE data_product SET is_used = 0 where id = #{id}
    </update>

    <!--上架数据包产品-->
    <update id="updatePutaway" parameterType="java.lang.Integer">
        UPDATE data_product SET is_used = 1 where id = #{id}
    </update>

    <!-- #################################################################### -->
    <!-- #######################数据包产品与属性关联表######################### -->
    <!-- #################################################################### -->
    <insert id="insertProductAttrRelation" parameterType="com.qtdbp.trading.model.DataProductAttrRelationModel" useGeneratedKeys="true" keyProperty="id">
        <!-- mysql插入数据后，获取id -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into data_product_attr_relation (
            product_id,
            type_id,
            attr_id,
            val_id,
            attr_name,
            val_name
        ) values (
            #{productId},
            #{typeId},
            #{attrId},
            #{valId},
            #{attrName},
            #{valName}
        )

    </insert>

    <select id="findProductAttrRelation" parameterType="java.lang.Integer" resultMap="productAttrRelationMap">
        select r.id, r.product_id, r.type_id, r.attr_id, r.val_id, r.attr_name, r.val_name from data_product_attr_relation r
        where r.product_id = #{id}
    </select>

    <resultMap id="productAttrRelationMap" type="com.qtdbp.trading.model.DataProductAttrRelationModel">
        <id column="id" property="id" />
        <result column="product_id" property="productId" />
        <result column="type_id" property="typeId" />
        <result column="attr_id" property="attrId" />
        <result column="attr_name" property="attrName" />
        <result column="val_id" property="valId" />
        <result column="val_name" property="valName" />
    </resultMap>

    <delete id="deleteAttrByProductId" parameterType="java.lang.Integer">
        delete from data_product_attr_relation where product_id = #{productId}
    </delete>

</mapper>